s = "TGACCATTCTTCCATTCTTCCTCACGAATAATTCTTCCGTAGTGTAGTGTAGTTCACGAATACCGCAAATTGACCTCACGAATAATTCTTCCTCACGAATATCACGAATACCGCAAATTGACCCCGCAAATTGACCTCACGAATAGTAGTTGACCATTCTTCCTGACCTCACGAATACCGCAAATTCACGAATATCACGAATATCACGAATAGTAGTTGACCTGACCGTAGTTGACCTCACGAATAATTCTTCCATTCTTCCATTCTTCCCCGCAAATTGACCTCACGAATACCGCAAATTCACGAATAATTCTTCCTCACGAATAGTAGTTGACCCCGCAAATGTAGTTGACCTGACCTGACCTGACCCCGCAAATTCACGAATACCGCAAATGTAGTTGACCCCGCAAATATTCTTCCTCACGAATACCGCAAATGTAGTATTCTTCCTGACCATTCTTCCTCACGAATAATTCTTCCATTCTTCCGTAGTCCGCAAATTGACCGTAGTTGACCCCGCAAATTCACGAATACCGCAAATGTAGTTCACGAATAGTAGTTCACGAATAGTAGTTCACGAATACCGCAAATTCACGAATATCACGAATAGTAGTTGACCCCGCAAATATTCTTCCTGACCCCGCAAATCCGCAAATTCACGAATAATTCTTCCTGACCATTCTTCCTCACGAATAGTAGTTGACCTCACGAATAATTCTTCCCCGCAAATTGACCGTAGTATTCTTCCTCACGAATAGTAGTGTAGTATTCTTCCTCACGAATATCACGAATACCGCAAATTGACCATTCTTCCTGACCTCACGAATACCGCAAATTGACCCCGCAAATTGACC"
k = 11

def search_k (string):
    counter = 0
    for i in range (len(s)-3):
        looking_for = s[i:i+k]
        if string == looking_for:
            counter += 1
    return counter-1
l = []
biggest = 0

for i in range (len(s)-3):
    code = s[i:i+k]
    if code not in l:
        l.append (code)
        number_of_repetition = search_k(code)
        if number_of_repetition >= biggest:
            biggest = number_of_repetition
            print s[i:i+k],
            print biggest


